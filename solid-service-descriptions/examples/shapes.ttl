@prefix http: <http://www.w3.org/2011/http#> .
@prefix sc: <http://www.w3.org/2011/http-statusCodes> .
@prefix solid: <http://www.w3.org/ns/solid/terms#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix ttl: <https://www.w3.org/ns/iana/media-types/text/turtle#Resource> .
#@prefix ttl: <http://www.sparontologies.net/mediatype/text/turtle> .

# Any resource conforming to this Solid Service Description
# provides the following two services:
 
{
  
  # For every request body that represents an RDF graph in Turtle format ...
  ?reqBody 
    dc:format ttl: ;
    solid:represents ?recipe .
    
  # ... which conforms to the RecipeShape ...
  ?recipe sh:shapesGraph example:RecipeShape .

} => {

  # ... there exists a POST request to '/recipes/' with that request body ...
  _:req
    a http:Request ;
    http:mthd http:POST ;
    http:requestURI "/recipes/" ;
    http:body ?reqBody ;

    # ... which results in a response with status 201 ...
    # ... pointing to the location '/recipes/{id}' ...
    http:resp [
      a http:Response ;
      http:sc sc:Created .
      http:headers (
        [ 
          http:hdrName headers:Location ; 
          http:fieldValue "/recipes/{id}" .
        ]
      ) .

    ] .

  # ... confirming the resource state now includes this recipe and its identifier.
  _:state log:includes ?recipe .
  ?recipe 
    a example:Recipe ;
    dc:identifier ?id .

} .

{

  # For every recipe ...
  # ... (according to the resource state) ...
  ?recipe 
    a example:Recipe ;
    dc:identifier ?id .

} => {

  # ... there exists a GET request to '/recipes/{id}' ...
  _:req
    a http:Request ;
    http:mthd http:GET ;
    http:requestURI "/recipes/{id}" ;
    http:resp _:resp .
    
  # ... which results in a response with status 200 ...
  _:resp
    a http:Response ;
    http:sc sc:Ok .
    http:body _:body .
    
  # ... containing a body that represents that recipe ...
  _:body solid:represents ?recipe .

  # ... which conforms to the RecipeShape.
  ?recipe sh:shapesGraph example:RecipeShape .

} .